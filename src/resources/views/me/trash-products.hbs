<form name="container-form" method="POST" action="/products/handle-form-actions" class="mt-4">
  <a href="/me/stored/products" class="text-decoration-none text-white bg-info p-2 rounded">
    <span class="oi oi-list"></span>
    Products List
  </a>
  <h3 class="text-center">Trash Product</h3>

  <div class="mt-4 d-flex align-items-center">
    <select class="form-select form-select-sm checkbox-select-all-options" name="action" required>
      <option value="">-- Select Option --</option>
      <option value="restore">Restore all</option>
      <option value="forceProduct">Delete all</option>
    </select>
    <button class="btn btn-primary btn-sm check-all-submit-btn disabled">Submit</button>
  </div>

  <table class="table mt-4 table-bordered rounded-4">
    <thead>
      <tr>
        <th scope="col">
          <input class="form-check-input" type="checkbox" value="" id="checkbox-all" />
        </th>
        <th scope="col">ID</th>
        <th scope="col">Product Name</th>
        <th scope="col">Description</th>
        <th scope="col">Created At</th>
        <th scope="col">Actions</th>
      </tr>
    </thead>
    <tbody>
      {{#each products}}

      <tr>
        <td>
          <div class="form-check">
            <input class="form-check-input" type="checkbox" name="productIds[]" value="{{this._id}}" id="" />
          </div>
        </td>
        <th scope="row">{{sum @index 1}}</th>
        <td>{{this.name}}</td>
        <td>{{this.description}}</td>
        <td>{{this.createdAt}}</td>
        <td>
          <a href="" class="btn btn-link btn-restore text-decoration-none text-white bg-success" data-id="{{this._id}}"
            >Restore</a
          >
          <a
            href=""
            class="btn btn-link text-decoration-none text-white bg-danger"
            data-bs-toggle="modal"
            data-id="{{this._id}}"
            data-bs-target="#delete-product-modal"
            >Delete</a
          >
        </td>
      </tr>
      {{else}}
      <tr>
        <td colspan="6">Trash is empty.</td>
      </tr>

      {{/each}}
    </tbody>
  </table>
</form>

{{! Confirm product blog }}

<div id="delete-product-modal" class="modal" tabindex="-1">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Permanently product the blog</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <p>This action can not undone. Do you want to delete the product permanently?</p>
      </div>
      <div class="modal-footer">
        <button type="button" id="btn-delete-product" class="btn btn-danger">Delete</button>
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
      </div>
    </div>
  </div>
</div>

<form name="delete-product-form" method="POST"></form>
<form name="restore-product-form" method="POST"></form>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    var productId;
    var restoreForm = document.forms['restore-product-form'];
    var deleteForm = document.forms['delete-product-form'];
    var btnRestore = $('.btn-restore');
    var btnDelete = document.getElementById('btn-delete-product');
    var checkboxAll = $('#checkbox-all');
    var productItemCheckbox = $('input[name="productIds[]"]');
    var checkAllSubmitBtn = $('.check-all-submit-btn');

    // When restore btn clicked
    btnRestore.click(function (e) {
      e.preventDefault();

      var productId = $(this).data('id');
      restoreForm.action = '/products/' + productId + '/restore?_method=PATCH';
      restoreForm.submit();
    });

    // When dialog confirm clicked
    const exampleModal = document.getElementById('delete-product-modal');
    if (exampleModal) {
      exampleModal.addEventListener('show.bs.modal', (event) => {
        const button = event.relatedTarget;
        productId = button.getAttribute('data-id');
      });
    }

    // When delete product btn clicked
    btnDelete.onclick = function () {
      deleteForm.action = '/products/' + productId + '/force?_method=DELETE';
      deleteForm.submit();
    };

    // When checkbox All checked
    checkboxAll.change(function () {
      var isCheckAll = $(this).prop('checked');
      productItemCheckbox.prop('checked', isCheckAll);
      renderCheckAllSubmitBtn();
    });

    // When product item checkbox change
    productItemCheckbox.change(function () {
      var isCheckAll = productItemCheckbox.length === $('input[name="productIds[]"]:checked').length;
      checkboxAll.prop('checked', isCheckAll);
      renderCheckAllSubmitBtn();
    });

    // Check all submit button submit
    checkAllSubmitBtn.on('submit', function (e) {
      var isSubmitTable = !$(this).hasClass('disabled');
      if (!isSubmitTable) {
        e.preventDefault();
      }
    });

    // Re-render check all submit button
    function renderCheckAllSubmitBtn() {
      var checkedCount = $('input[name="productIds[]"]:checked').length;
      if (checkedCount) {
        checkAllSubmitBtn.removeClass('disabled');
      } else {
        checkAllSubmitBtn.addClass('disabled');
      }
    }
  });
</script>
