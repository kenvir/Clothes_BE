<form name="container-form" method="POST" action="/blogs/handle-form-actions" class="mt-4">
  <h3 class="text-center">MY BLOG</h3>
  <div class="d-flex align-item-center justify-content-between">
    <a href="/blogs/create" class="mx-4 text-decoration-none text-white bg-primary p-2 rounded">
      <span class="oi oi-pencil"></span>
      Add blog
    </a>

    <a href="/me/trash/blogs" class="text-decoration-none text-white bg-danger p-2 rounded">
      <span class="oi oi-trash"></span>
      Trash ({{deletedCount}})
    </a>
  </div>

  <div class="mt-4 d-flex align-items-center">
    <select class="form-select form-select-sm checkbox-select-all-options" name="action" required>
      <option value="">-- Select Action --</option>
      <option value="delete">Delete</option>
    </select>

    <button class="btn btn-primary btn-sm check-all-submit-btn disabled">Submit</button>
  </div>

  <table class="table mt-4 table-bordered">
    <thead>
      <tr>
        <th scope="col">
          <input class="form-check-input" type="checkbox" value="" id="checkbox-all" />
        </th>

        <th scope="col">ID {{{sortable '_id' _sort}}}</th>
        <th scope="col">Blog title {{{sortable 'title' _sort}}}</th>
        <th scope="col">Description {{{sortable 'description' _sort}}}</th>
        <th scope="col">Created At {{{sortable 'createdAt' _sort}}}</th>
        <th scope="col">Actions</th>
      </tr>
    </thead>
    <tbody>
      {{#each blogs}}
      <tr>
        <td>
          <div class="form-check">
            <input class="form-check-input" type="checkbox" name="blogIds[]" value="{{this._id}}" id="" />
          </div>
        </td>

        <th scope="row">{{this._id}}</th>
        <td>{{this.title}}</td>
        <td>{{this.description}}</td>
        <td>{{this.createdAt}}</td>

        <td class="action-button">
          <a
            href="/blogs/{{this._id}}/edit"
            class="btn btn-link text-decoration-none text-white bg-warning bg-opacity-50 btn-edit"
            >Edit</a
          >
          <a
            href=""
            class="btn btn-link text-decoration-none text-white bg-danger btn-delete"
            data-bs-toggle="modal"
            data-id="{{this._id}}"
            data-bs-target="#delete-blog-modal"
            >Delete</a
          >
        </td>
      </tr>
      {{else}}
      <tr>
        <td colspan="5">
          You don't have any blog.
          <a href="/blogs/create">Write blog.</a>
        </td>
      </tr>
      {{/each}}
    </tbody>
  </table>
</form>

{{! Confirm delete blog }}

<div id="delete-blog-modal" class="modal" tabindex="-1">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Delete blog</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <p>Are you confirm you want to delete this blog?</p>
      </div>
      <div class="modal-footer">
        <button type="button" id="btn-delete-blog" class="btn btn-danger">Delete</button>
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
      </div>
    </div>
  </div>
</div>

{{!-- Delete hidden form --}}

<form name="delete-blog-form" method="POST"></form>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const exampleModal = document.getElementById('delete-blog-modal');

    var containerForm = document.forms['container-form'];
    var blogId;
    var deleteForm = document.forms['delete-blog-form'];
    var btnDelete = document.getElementById('btn-delete-blog');
    var checkboxAll = $('#checkbox-all');
    var blogItemCheckbox = $('input[name="blogIds[]"]');
    var checkAllSubmitBtn = $('.check-all-submit-btn');

    // When dialog confirm clicked
    if (exampleModal) {
      exampleModal.addEventListener('show.bs.modal', (event) => {
        const button = event.relatedTarget;
        blogId = button.getAttribute('data-id');
      });
    }

    // When delete blog btn clicked
    btnDelete.onclick = function () {
      deleteForm.action = '/blogs/' + blogId + '?_method=DELETE';
      deleteForm.submit();
    };

    // When checkboxAll checked
    checkboxAll.change(function () {
      var isCheckedAll = $(this).prop('checked');
      blogItemCheckbox.prop('checked', isCheckedAll);
      renderCheckAllSubmitBtn();
    });

    // Blog item checkbox changed
    blogItemCheckbox.change(function () {
      var isCheckedAll = blogItemCheckbox.length === $('input[name="blogIds[]"]:checked').length;
      checkboxAll.prop('checked', isCheckedAll);
      renderCheckAllSubmitBtn();
    });

    // Check all submit button clicked
    checkAllSubmitBtn.on('submit', function (e) {
      var isSubmitTable = !$(this).hasClass('disabled');
      if (!isSubmitTable) {
        e.preventDefault;
      }
    });

    // Re-render check all submit button
    function renderCheckAllSubmitBtn() {
      var checkedCount = $('input[name="blogIds[]"]:checked').length;
      if (checkedCount) {
        checkAllSubmitBtn.removeClass('disabled');
      } else {
        checkAllSubmitBtn.addClass('disabled');
      }
    }
  });
</script>
